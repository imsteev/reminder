```mermaid
graph TB
    subgraph "Frontend (React/TypeScript)"
        UI[User Interface]
        RF[ReminderForm]
        RL[ReminderList]
        API[API Client]
        RQ[React Query]
    end

    subgraph "Backend (Go/Gin)"
        subgraph "HTTP Layer"
            Router[Gin Router]
            Handler[Handler]
        end
        
        subgraph "Application Layer"
            App[App Controller]
        end
        
        subgraph "Business Layer"
            RC[Reminder Controller]
        end
        
        subgraph "Job System"
            River[River Client]
            JobQueue[Job Queue]
            Worker[Periodic Reminder Worker]
        end
    end

    subgraph "Data Layer"
        DB[(PostgreSQL)]
        RemTable[reminders table]
        JobTable[river_job table]
    end

    subgraph "External Services"
        SMS[SMS Service<br/>Placeholder]
    end

    %% Frontend connections
    UI --> RF
    UI --> RL
    RF --> RQ
    RL --> RQ
    RQ --> API
    API -->|HTTP REST| Router

    %% Backend flow
    Router --> Handler
    Handler --> App
    App --> RC
    RC --> DB
    RC --> River

    %% Job processing
    River --> JobQueue
    JobQueue --> Worker
    Worker --> SMS

    %% Database connections
    DB --> RemTable
    DB --> JobTable
    River -.->|Uses PostgreSQL| DB

    %% Data relationships
    RemTable -.->|job_id reference| JobTable

    %% Styling
    classDef frontend fill:#e1f5fe
    classDef backend fill:#f3e5f5
    classDef data fill:#e8f5e8
    classDef external fill:#fff3e0

    class UI,RF,RL,API,RQ frontend
    class Router,Handler,App,RC,River,JobQueue,Worker backend
    class DB,RemTable,JobTable data
    class SMS external
```